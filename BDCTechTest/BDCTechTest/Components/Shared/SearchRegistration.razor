@using BDCTechTest.Components.Models
@using BDCTechTest.Components.Services
@using System.ComponentModel.DataAnnotations
@using Newtonsoft.Json

@rendermode InteractiveServer

@inject IServiceBase Service
@implements IDisposable

<h3>Please enter a full Vehicle Registration Number</h3>

<div class="history-form">
    <EditForm Model="@model" OnValidSubmit="HandleValidSubmit" FormName="HistoryForm">
        <label for="input">Enter some text:</label>

        <InputText id="input" @bind-Value="model.RegNumber" />
        <button type="submit">Check History</button>
        <DataAnnotationsValidator />
        <ValidationSummary />
    </EditForm>

    @if (responseData != null && responseData.Message != string.Empty)
    {
        <p>@responseData.Message</p>
    }
    else if(responseData != null && responseData.Message == string.Empty)
    {
        <table>
            <thead>
                <tr>
                    <th>Make</th>
                    <th>Model</th>
                    <th>Colour</th>
                    <th>MOT Expiry</th>
                    <th>Mileage</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@responseData.Make</td>
                    <td>@responseData.Model</td>
                    <td>@responseData.Colour</td>
                    <td>@responseData.MOTExpiry.ToString("yyyy-MM-dd")</td>
                    <td>@responseData.Mileage</td>
                </tr>
            </tbody>
        </table>
    }
</div>

@code {
    private Model model = new Model();
    private MOTData responseData = null;

    async Task HandleValidSubmit()
    {
        var data = await Service.GetMOTDataAsync(model.RegNumber);
        responseData = data;
    }

    public void Dispose() { }

    public class Model
    {
        public string RegNumber { get; set; }
    }
}